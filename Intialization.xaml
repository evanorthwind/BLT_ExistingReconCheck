<Activity mc:Ignorable="sap sap2010" x:Class="Intialization" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Out_Error_Msg" Type="OutArgument(x:String)" />
    <x:Property Name="Out_Error_Status" Type="OutArgument(x:Boolean)" />
    <x:Property Name="Out_Sender_mail_ID" Type="OutArgument(x:String)" />
    <x:Property Name="Out_Config_file_Path" Type="OutArgument(x:String)" />
    <x:Property Name="Out_Nav_retry_count" Type="OutArgument(x:Double)" />
    <x:Property Name="Out_Nav_retry_time_delay" Type="OutArgument(x:Double)" />
    <x:Property Name="Out_DdriveStandardPath" Type="OutArgument(x:String)" />
    <x:Property Name="Out_StatusFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="Out_ExistingReconCheckFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="Out_LogsFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="Out_ABSASharedDrive_Path" Type="OutArgument(x:String)" />
    <x:Property Name="Out_FNBSharedDrive_Path" Type="OutArgument(x:String)" />
    <x:Property Name="Out_STDSharedDrive_Path" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>494,2198</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Org.BouncyCastle.Asn1.Cms</x:String>
      <x:String>Org.BouncyCastle.Asn1</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>BouncyCastle.Crypto</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open Config file and read details" DisplayName="Intialization" sap:VirtualizedContainerService.HintSize="454,2118" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="432,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Intialization Process Started&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <TryCatch DisplayName="Intialization" sap:VirtualizedContainerService.HintSize="432,1785" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Default="Config Details" Name="Sheet_Name" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Open Configuration file to get the filepaths" DisplayName="Get Details from Configuration File" sap:VirtualizedContainerService.HintSize="414,1558" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="Configuration File.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336,1422" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="D drive standard path" Cell="B2" DisplayName="D drive standard path" sap:VirtualizedContainerService.HintSize="314,86" sap2010:WorkflowViewState.IdRef="ExcelReadCell_26" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_DdriveStandardPath]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="Status file path to check new files which are ready to import" Cell="B3" DisplayName="BLT status file path" sap:VirtualizedContainerService.HintSize="314,101" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_StatusFilePath]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="File path where we are saving the mail body of BLT scheduled process to check existing recon" Cell="B4" DisplayName="Sent mail body of scheduled process" sap:VirtualizedContainerService.HintSize="314,101" sap2010:WorkflowViewState.IdRef="ExcelReadCell_10" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_ExistingReconCheckFilePath]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="File path to enter process start and end time" Cell="B5" DisplayName="Read Process logs file path" sap:VirtualizedContainerService.HintSize="314,86" sap2010:WorkflowViewState.IdRef="ExcelReadCell_29" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_LogsFilePath]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell Cell="B6" DisplayName="Read Mail ID" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_28" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_Sender_mail_ID]</OutArgument>
                  </ui:ExcelReadCell.Result>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="Config file path - where the thursday rules will be desided" Cell="B8" DisplayName="Config file path" sap:VirtualizedContainerService.HintSize="314,101" sap2010:WorkflowViewState.IdRef="ExcelReadCell_14" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_Config_file_Path]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="The no of time retry should be done if any error occurs" Cell="B9" DisplayName="Nav retry count" sap:VirtualizedContainerService.HintSize="314,101" sap2010:WorkflowViewState.IdRef="ExcelReadCell_20" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:Double">[Out_Nav_retry_count]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell sap2010:Annotation.AnnotationText="Time gap between each retry" Cell="B10" DisplayName="Nav retry time delay" sap:VirtualizedContainerService.HintSize="314,86" sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:Double">[Out_Nav_retry_time_delay]</OutArgument>
                  </ui:ExcelReadCell.Result>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell Cell="B11" DisplayName="Read ABSA D drive path for phase 2" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_32" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_ABSASharedDrive_Path]</OutArgument>
                  </ui:ExcelReadCell.Result>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell Cell="B12" DisplayName="Read FNB D drive path for phase 2" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_33" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_FNBSharedDrive_Path]</OutArgument>
                  </ui:ExcelReadCell.Result>
                </ui:ExcelReadCell>
                <ui:ExcelReadCell Cell="B13" DisplayName="Read STD D drive path for phase 2" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_34" SheetName="[Sheet_Name]">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[Out_STDSharedDrive_Path]</OutArgument>
                  </ui:ExcelReadCell.Result>
                </ui:ExcelReadCell>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="418,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="If error occurs" sap:VirtualizedContainerService.HintSize="264,51" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[exception.ToString]" />
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Out_Error_Msg]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Unable to get the details from Configuration excel</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[Out_Error_Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Error Msg ; &quot;+Out_Error_Msg]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="432,51" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Intialization Process Ended&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>